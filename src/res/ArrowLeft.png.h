#ifndef ARROWLEFT_PNG_H
#define ARROWLEFT_PNG_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char ArrowLeft_png[] = 
{
	0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 
	0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 
	0x00, 0x00, 0x00, 0x20, 0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 
	0x7A, 0x7A, 0xF4, 0x00, 0x00, 0x00, 0x06, 0x62, 0x4B, 0x47, 
	0x44, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xA0, 0xBD, 0xA7, 
	0x93, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 
	0x00, 0x0B, 0x13, 0x00, 0x00, 0x0B, 0x13, 0x01, 0x00, 0x9A, 
	0x9C, 0x18, 0x00, 0x00, 0x00, 0x07, 0x74, 0x49, 0x4D, 0x45, 
	0x07, 0xE1, 0x02, 0x14, 0x13, 0x2D, 0x33, 0x35, 0xED, 0xD7, 
	0xFF, 0x00, 0x00, 0x02, 0xFD, 0x49, 0x44, 0x41, 0x54, 0x58, 
	0xC3, 0xBD, 0x96, 0x5B, 0x48, 0x54, 0x51, 0x14, 0x86, 0xFF, 
	0xB5, 0x67, 0xBC, 0xA5, 0x0E, 0xA5, 0x62, 0x98, 0x20, 0xC6, 
	0x14, 0xD4, 0x4B, 0x91, 0x23, 0x25, 0x04, 0x12, 0x68, 0x48, 
	0x44, 0x17, 0xB0, 0x54, 0xA2, 0x22, 0xB0, 0x9B, 0x25, 0x1A, 
	0x35, 0x99, 0xA5, 0xF4, 0x60, 0x5A, 0x0F, 0x8A, 0x95, 0xF6, 
	0x20, 0xA6, 0x51, 0x3E, 0x69, 0x1A, 0x84, 0x2F, 0xD2, 0x45, 
	0x13, 0x4A, 0x0A, 0x45, 0x25, 0xC3, 0x0C, 0xA4, 0x0B, 0x8C, 
	0x9A, 0x5A, 0x2A, 0x79, 0x89, 0x2E, 0x73, 0xF6, 0xEA, 0xE1, 
	0xD8, 0xA4, 0x86, 0xE3, 0x71, 0x66, 0x8E, 0xFB, 0x65, 0x1D, 
	0xF6, 0xE2, 0xAC, 0xF5, 0xED, 0xBD, 0x6E, 0x1B, 0xD0, 0x79, 
	0xC9, 0xF2, 0x02, 0x55, 0x16, 0x5F, 0x88, 0x91, 0x49, 0x9B, 
	0x62, 0x65, 0xFD, 0xBD, 0xD5, 0x33, 0xF5, 0x84, 0x25, 0x58, 
	0xF2, 0x6A, 0xFA, 0x0B, 0x7A, 0xDB, 0xBE, 0x15, 0xBF, 0x7E, 
	0x02, 0x3E, 0xBE, 0x53, 0xBC, 0x37, 0x35, 0x41, 0x24, 0xA6, 
	0xB6, 0xE8, 0x0E, 0x20, 0x33, 0x77, 0x9F, 0xA2, 0xB1, 0x91, 
	0xEB, 0x98, 0x9A, 0xF0, 0x86, 0xC1, 0xE8, 0xD8, 0x67, 0xE6, 
	0x63, 0xA2, 0xB6, 0xB3, 0x02, 0x00, 0x8C, 0x7A, 0x38, 0xE6, 
	0x92, 0x1C, 0x7F, 0x74, 0xBD, 0x9A, 0xC4, 0xE7, 0x3E, 0x75, 
	0xC3, 0x30, 0xDB, 0x0D, 0x11, 0xC9, 0xBF, 0xDF, 0xC2, 0xA3, 
	0x8E, 0x99, 0x03, 0x64, 0xC6, 0x9E, 0x36, 0x3C, 0x6F, 0x98, 
	0xC4, 0xB7, 0x51, 0xD6, 0xF2, 0x8F, 0x5B, 0x00, 0xF2, 0xD6, 
	0x65, 0x55, 0xE6, 0x9F, 0x0C, 0x94, 0x69, 0x3B, 0x33, 0x91, 
	0x6C, 0x99, 0xA0, 0x41, 0x5B, 0x34, 0x48, 0x3D, 0xA6, 0x16, 
	0x1B, 0x6E, 0x85, 0x40, 0xA4, 0xE7, 0x41, 0x16, 0x9E, 0xAB, 
	0xA3, 0x77, 0x1D, 0x89, 0x18, 0x1F, 0x03, 0x68, 0xF1, 0xE7, 
	0x71, 0x19, 0x40, 0x5A, 0x93, 0xA2, 0x31, 0xF2, 0xE5, 0x11, 
	0xBD, 0x7C, 0x12, 0x04, 0xA3, 0xD1, 0x25, 0xE7, 0x2E, 0x03, 
	0xF0, 0xF1, 0xED, 0xBD, 0xE8, 0xFF, 0xB4, 0x06, 0x8A, 0x1D, 
	0x30, 0xBA, 0x97, 0xC7, 0x9A, 0xB1, 0x15, 0xDB, 0x87, 0x20, 
	0x79, 0xF1, 0x50, 0x9D, 0x4C, 0x8A, 0x62, 0x8C, 0x7D, 0x35, 
	0x43, 0xB1, 0x7B, 0x24, 0x71, 0x9D, 0x02, 0xC8, 0xEC, 0x83, 
	0xAA, 0x3C, 0xBD, 0x2B, 0x4E, 0x64, 0xA5, 0xF4, 0xD1, 0xFB, 
	0xEE, 0x44, 0x82, 0xF6, 0x04, 0x73, 0x1B, 0x80, 0x82, 0x43, 
	0x73, 0x65, 0xDA, 0x8E, 0xEF, 0x34, 0x64, 0x7B, 0x0A, 0xC5, 
	0xEE, 0xA7, 0x47, 0xCF, 0x98, 0x15, 0x40, 0x79, 0x3E, 0x05, 
	0xA2, 0xB0, 0x1A, 0xF2, 0xE6, 0x45, 0x7F, 0xF4, 0x74, 0xBE, 
	0x46, 0xEB, 0x33, 0x33, 0x11, 0x01, 0x42, 0x40, 0xAF, 0x35, 
	0xCB, 0xB2, 0x28, 0xAC, 0x86, 0x3C, 0x91, 0x70, 0x97, 0x5A, 
	0x9B, 0x27, 0x69, 0x64, 0xC8, 0x0C, 0xD2, 0x7F, 0x54, 0x38, 
	0x00, 0x64, 0xB1, 0x35, 0x87, 0x93, 0x2D, 0x4C, 0xA3, 0xC3, 
	0x87, 0xF1, 0xFB, 0x27, 0x9C, 0x3B, 0xD7, 0x00, 0x46, 0xA4, 
	0xA9, 0x34, 0x1D, 0x21, 0xA0, 0x37, 0x6D, 0xF9, 0x60, 0xD6, 
	0x98, 0x60, 0x73, 0xBA, 0x2C, 0x09, 0xC0, 0x20, 0x00, 0x66, 
	0x55, 0x25, 0x15, 0x75, 0x8F, 0x19, 0x30, 0x18, 0x00, 0xC9, 
	0x00, 0x4B, 0xE7, 0x00, 0xEC, 0xD2, 0x68, 0x24, 0xF5, 0x27, 
	0x66, 0xC0, 0x3E, 0xA7, 0x2C, 0xA5, 0x32, 0x5D, 0xBF, 0x70, 
	0x7A, 0x13, 0xFF, 0x34, 0xEB, 0x2D, 0xB9, 0x20, 0x02, 0x98, 
	0x79, 0x11, 0x2D, 0x49, 0x75, 0x0E, 0x5E, 0x38, 0x1C, 0x0B, 
	0x01, 0x88, 0xAC, 0xE2, 0x02, 0xAA, 0x69, 0x27, 0x5E, 0x1E, 
	0x52, 0x05, 0x2F, 0x9F, 0x69, 0xC3, 0x9E, 0x7A, 0x18, 0x28, 
	0xDA, 0xAA, 0x40, 0x9E, 0xDD, 0x0F, 0x71, 0xFB, 0xC9, 0x11, 
	0xDE, 0xBC, 0x2D, 0x90, 0x43, 0xC2, 0xFA, 0x3D, 0x0A, 0xE1, 
	0x4A, 0x3A, 0xCB, 0x6B, 0x99, 0xB9, 0xF8, 0xD8, 0x73, 0x89, 
	0x46, 0x87, 0xFD, 0x3C, 0xDC, 0x0B, 0x52, 0xE9, 0x7E, 0xC7, 
	0x9D, 0x85, 0x67, 0xC1, 0xC8, 0x60, 0xBE, 0x28, 0x7F, 0xBC, 
	0x8C, 0x43, 0xC2, 0xE2, 0x61, 0x30, 0xFE, 0xD0, 0xBD, 0x11, 
	0xFD, 0xA7, 0x2C, 0xAA, 0x51, 0x65, 0x59, 0x43, 0x23, 0xAC, 
	0x45, 0x66, 0x8E, 0x5C, 0xF7, 0x40, 0x2D, 0x35, 0xCF, 0xC5, 
	0x46, 0xF3, 0x2C, 0x25, 0x4B, 0xEC, 0x00, 0x80, 0x7D, 0x00, 
	0xC0, 0x47, 0xE3, 0x7A, 0x31, 0x35, 0xBE, 0x06, 0x8A, 0xA2, 
	0xEF, 0x0D, 0xCC, 0x0B, 0x53, 0xD1, 0xB8, 0x96, 0xC3, 0x23, 
	0xB7, 0x70, 0xA0, 0x69, 0x02, 0x76, 0x3B, 0x2F, 0x39, 0x80, 
	0x1A, 0x9E, 0xDA, 0x56, 0x51, 0xD9, 0x6C, 0xE2, 0xCD, 0xDB, 
	0x9A, 0xE0, 0x6F, 0x72, 0xB9, 0x6C, 0xDD, 0x7B, 0x94, 0xDE, 
	0xC8, 0x86, 0xC8, 0x2E, 0x89, 0xE7, 0x08, 0xB3, 0x89, 0x83, 
	0x57, 0x9E, 0x71, 0x05, 0xC2, 0xA3, 0xE3, 0x8E, 0x87, 0xFB, 
	0x57, 0xF1, 0x95, 0xB4, 0x06, 0x1A, 0xB4, 0x6D, 0x00, 0xC0, 
	0x4E, 0xE6, 0x8A, 0xC6, 0x32, 0x5C, 0xEC, 0x69, 0x42, 0xC3, 
	0x07, 0x44, 0x69, 0xFD, 0x46, 0xDE, 0x12, 0x1F, 0x00, 0xD3, 
	0x0A, 0xD2, 0x3D, 0x04, 0xF3, 0x1A, 0xB5, 0x16, 0x4E, 0x51, 
	0x65, 0x13, 0xF1, 0xCA, 0x88, 0x0C, 0xF6, 0xF5, 0xB3, 0xCF, 
	0x7D, 0x3F, 0x32, 0xB3, 0xD0, 0x15, 0xC0, 0x61, 0xBC, 0xF4, 
	0x61, 0xA9, 0xA8, 0x6A, 0xF1, 0xE2, 0xA8, 0xD8, 0x2E, 0x78, 
	0x79, 0xAB, 0x9B, 0xDE, 0x3E, 0xE3, 0x38, 0x90, 0xD1, 0x8D, 
	0xA5, 0x5A, 0xB2, 0x2C, 0x4F, 0x95, 0x45, 0xD6, 0x18, 0x99, 
	0x62, 0x89, 0x95, 0x8F, 0x6B, 0xC3, 0x67, 0xEA, 0xFF, 0x00, 
	0x61, 0xC6, 0x1D, 0xDD, 0xEA, 0xFB, 0x80, 0x1E, 0x00, 0x00, 
	0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82, 
};

wxBitmap& ArrowLeft_png_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( ArrowLeft_png, sizeof( ArrowLeft_png ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_PNG );
	static wxBitmap bmp( image );
	return bmp;
};


#endif //ARROWLEFT_PNG_H
